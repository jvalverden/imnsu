/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package reportes;

import Dao.recepciongeneradorDao;
import Vo.configuracionVo;
import Vo.recepciongeneradorVo;
import java.util.Date;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import resources.img.GeneraReport;
import resources.img.JInternalFrameView;
import resources.img.formato;
import resources.img.hora;

/**
 *
 * @author CONSEJO
 */
public class jpAgendaProgramada extends javax.swing.JPanel {
    private final JInternalFrameView iframe;
    private int dia, mes, anno;
    private final hora h1;
    private final formato ff = new formato();
    private configuracionVo configuracion;    
    /**
     * Creates new form jpAgendaProgramada
     * @param iframe
     */
    public jpAgendaProgramada(JInternalFrameView iframe) {
        h1 = new hora();        
        initComponents();
        this.iframe = iframe;
        dia = (new Date()).getDate();
        mes = (new Date()).getMonth();
        anno = (new Date()).getYear();
        jxmvCalendario.setSelectionDate(new Date(anno, mes, dia)); 
        setTablaListaRecepcion();        
    }
    private void eliminarfilastabla(javax.swing.JTable tabla, int i) {
        ((DefaultTableModel) tabla.getModel()).removeRow(i);
    }

    private void eliminartodaslasfilastabla(javax.swing.JTable tabla) {
        while (tabla.getRowCount() > 0) {
            ((DefaultTableModel) tabla.getModel()).removeRow(tabla.getRowCount() - 1);
        }
    }

    public void agregar_fila_tabla(Vector fila, javax.swing.JTable tabla) {
        ((DefaultTableModel) tabla.getModel()).addRow(fila);
    }    
private void setTablaListaRecepcion() {
        eliminartodaslasfilastabla(jxtlistaRecepcion);
        Vector v;
        for (recepciongeneradorVo recepcion : recepciongeneradorDao.getListaRecepcion()) {
            v = new Vector();
            v.add(recepcion.getReactivo());
            v.add(recepcion.getFecha());
            v.add(recepcion.getHora());
            v.add(recepcion.getActividad());
            v.add(recepcion);
            agregar_fila_tabla(v, jxtlistaRecepcion);
        }
        if (jxtlistaRecepcion.getRowCount() > 0) {
            jxtlistaRecepcion.setRowSelectionInterval(0, 0);
            calcularActividad();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXHeader1 = new org.jdesktop.swingx.JXHeader();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jxmvCalendario = new org.jdesktop.swingx.JXMonthView();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jxtlistaRecepcion = new org.jdesktop.swingx.JXTable();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jXHeader1.setTitle("Agenda Programada ");
        add(jXHeader1, java.awt.BorderLayout.NORTH);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel7.setLayout(new java.awt.BorderLayout());
        jPanel6.add(jPanel7, java.awt.BorderLayout.CENTER);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setText("<<");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton4, java.awt.BorderLayout.WEST);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton5.setText(">>");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton5, java.awt.BorderLayout.EAST);

        jPanel3.add(jPanel6, java.awt.BorderLayout.NORTH);

        jxmvCalendario.setSelectionMode(org.jdesktop.swingx.calendar.DateSelectionModel.SelectionMode.SINGLE_INTERVAL_SELECTION);
        jPanel3.add(jxmvCalendario, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel8.setLayout(new java.awt.BorderLayout());

        jxtlistaRecepcion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo Reactivo", "Fecha", "Hora", "Actividad", "Obj"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jxtlistaRecepcion.getTableHeader().setReorderingAllowed(false);
        jxtlistaRecepcion.setVisibleRowCount(5);
        jxtlistaRecepcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jxtlistaRecepcionMouseReleased(evt);
            }
        });
        jxtlistaRecepcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jxtlistaRecepcionKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jxtlistaRecepcion);
        if (jxtlistaRecepcion.getColumnModel().getColumnCount() > 0) {
            jxtlistaRecepcion.getColumnModel().getColumn(4).setMinWidth(0);
            jxtlistaRecepcion.getColumnModel().getColumn(4).setPreferredWidth(0);
            jxtlistaRecepcion.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        jPanel8.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel4, java.awt.BorderLayout.WEST);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        jButton1.setText("Generar Reporte");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        add(jPanel2, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (mes == 0) {
            mes = 11;
            anno = anno - 1;
            dia = 1;
        } else {
            mes = mes - 1;
            dia = 1;
        }
        jxmvCalendario.setFirstDisplayedDay(new Date(anno, mes, dia));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (mes == 11) {
            mes = 0;
            anno = anno + 1;
            dia = 1;
        } else {
            mes = mes + 1;
            dia = 1;
        }
        jxmvCalendario.setFirstDisplayedDay(new Date(anno, mes, dia));
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jxtlistaRecepcionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jxtlistaRecepcionMouseReleased
        // TODO add your handling code here:
        calcularActividad();
    }//GEN-LAST:event_jxtlistaRecepcionMouseReleased

    private void jxtlistaRecepcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jxtlistaRecepcionKeyReleased
        calcularActividad();
    }//GEN-LAST:event_jxtlistaRecepcionKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            GeneraReport r_bien = new GeneraReport("agendaProgramada.jasper");
            r_bien.establecer_fechas("f1", new java.sql.Date(jxmvCalendario.getSelection().first().getTime()));
            r_bien.establecer_fechas("f2", new java.sql.Date(jxmvCalendario.getSelection().last().getTime()));
            r_bien.generar_reporte();
        
    }//GEN-LAST:event_jButton1ActionPerformed
private void calcularActividad() {
//        setTablaHora(jtHoraM);
//        setTablaHora(jtHoraT);
//        setTablaModelo(jtMolibdeno);
//        setTablaModelo(jtTecnecio);
//        calcularActividadMobildeno();
//        calcularActividadTecnecio();
//        recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getModel().getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);
////        System.out.println("id->"+recepcion.getId());
////        System.out.println("sw->"+recepcion.getSegundaelucion1());
//        if (recepcion.getSegundaelucion1()) {
//            jtMolibdeno.setRowSelectionInterval(recepcion.getFila1(), recepcion.getFila1());
//            jtMolibdeno.setColumnSelectionInterval(recepcion.getColumna1(), recepcion.getColumna1());
//            segundaElucion();
//        }
//        if (recepcion.getSegundaelucion2()) {
//            jtMolibdeno.setRowSelectionInterval(recepcion.getFila2(), recepcion.getFila2());
//            jtMolibdeno.setColumnSelectionInterval(recepcion.getColumna2(), recepcion.getColumna2());
//            segundaElucion();
//        }
//        if (recepcion.getSegundaelucion3()) {
//            jtMolibdeno.setRowSelectionInterval(recepcion.getFila3(), recepcion.getFila3());
//            jtMolibdeno.setColumnSelectionInterval(recepcion.getColumna3(), recepcion.getColumna3());
//            segundaElucion();
//        }
//        if (recepcion.getSegundaelucion4()) {
//            jtMolibdeno.setRowSelectionInterval(recepcion.getFila4(), recepcion.getFila4());
//            jtMolibdeno.setColumnSelectionInterval(recepcion.getColumna4(), recepcion.getColumna4());
//            segundaElucion();
//        }
//        if (recepcion.getSegundaelucion5()) {
//            jtMolibdeno.setRowSelectionInterval(recepcion.getFila5(), recepcion.getFila5());
//            jtMolibdeno.setColumnSelectionInterval(recepcion.getColumna5(), recepcion.getColumna5());
//            segundaElucion();
//        }
//        if (recepcion.getSegundaelucion6()) {
//            jtMolibdeno.setRowSelectionInterval(recepcion.getFila6(), recepcion.getFila6());
//            jtMolibdeno.setColumnSelectionInterval(recepcion.getColumna6(), recepcion.getColumna6());
//            segundaElucion();
//        }

    }

    public static double fijarNumero(double numero, int digitos) {
        double resultado;
        resultado = numero * Math.pow(10, digitos);
        resultado = Math.round(resultado);
        resultado = resultado / Math.pow(10, digitos);
        return resultado;
    }

    private void calcularActividadMolibdeno() {
//        recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getModel().getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);
//        int s = recepcion.getHora().getHours() - 7;
//        Double r;// = recepcion.getActividad() * Math.exp(configuracion.getN() / configuracion.getMt2() * (24 - configuracion.getQ()));
//        int Nn = -1;
//        int Nx = 24;
//        int Sx = 0;
//        boolean sw = true;
//        //if(s==1)sw=false;
//        for (int j = 0; j < jtMolibdeno.getRowCount(); j++) {
//            //  sw = true;
//            Sx = 0;
//            Nn = Nn + 1;
//            for (int i = 0; i < jtMolibdeno.getColumnCount(); i++) {
//                if (i == 0) {
//                    if (j == s) {
//                        r = recepcion.getActividad();
//                        sw = false;
//                    } else {
//                        if (sw) {
//                            r = 0.0;
//                        } else {
//                            r = recepcion.getActividad() * Math.exp(configuracion.getN() / configuracion.getMt2() * (Nn - s));
//                        }
//                    }
//                } else {
//                    Sx = Nx * i + Nn;
//                    r = recepcion.getActividad() * Math.exp(configuracion.getN() / configuracion.getMt2() * (Sx - s));
//                }
//                jtMolibdeno.getModel().setValueAt(fijarNumero(r, 5), j, i);
//                if (j == 0) {
//                    jtTecnecio.getModel().setValueAt(fijarNumero(r, 5)*0.8796, 0, i);
//                }
//            }
//
//        }

    }

    private void calcularActividadTecnecio() {
//        Double c = 0.0;
//        recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getModel().getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);
//        int s = recepcion.getHora().getHours() - 7;
//        Double r = recepcion.getActividad() * Math.exp(configuracion.getN() / configuracion.getMt2() * (24 - configuracion.getQ()));
//        boolean sw = true;
//
//        if (s == 1) {
//            c = Double.valueOf(jtConstantes.getModel().getValueAt(22, 2).toString());
//            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
//            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
//        }
//        if (s == 2) {
//            c = Double.valueOf(jtConstantes.getModel().getValueAt(21, 2).toString());
//            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
//            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
//        }
//        if (s == 3) {
//            c = Double.valueOf(jtConstantes.getModel().getValueAt(20, 2).toString());
//            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
//            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
//        }
//        if (s == 4) {
//            c = Double.valueOf(jtConstantes.getModel().getValueAt(19, 2).toString());
//            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
//            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
//        }
//        if (s == 5) {
//            c = Double.valueOf(jtConstantes.getModel().getValueAt(18, 2).toString());
//            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
//            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
//        }
//        if (s == 6) {
//            c = Double.valueOf(jtConstantes.getModel().getValueAt(17, 2).toString());
//            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
//            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
//        }
//        if (s == 7) {
//            c = Double.valueOf(jtConstantes.getModel().getValueAt(16, 2).toString());
//            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
//            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
//        }
//        if (s == 8) {
//            c = Double.valueOf(jtConstantes.getModel().getValueAt(15, 2).toString());
//            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
//            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
//        }
//        if (s == 9) {
//            c = Double.valueOf(jtConstantes.getModel().getValueAt(14, 2).toString());
//            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
//            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
//        }
//        if (s == 10) {
//            c = Double.valueOf(jtConstantes.getModel().getValueAt(13, 2).toString());
//            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
//            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
//        }
//        if (s == 11) {
//            c = Double.valueOf(jtConstantes.getModel().getValueAt(12, 2).toString());
//            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
//            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
//        }
//        if (s == 0) {
//            sw = false;
//        }
//        for (int j = 1; j < jtTecnecio.getRowCount(); j++) {
//
//            for (int i = 0; i < jtTecnecio.getColumnCount(); i++) {
//                if (i == 0) {
//                    if (j == s) {
//                        r = recepcion.getActividad();
//                        sw = false;
//                    } else {
//                        if (sw) {
//                            r = 0.0;
//                        } else {
//                            r = recepcion.getActividad() * Math.exp(configuracion.getN() / configuracion.getT2() * (j - s));
//                        }
//                    }
//                } else {
//
//                    r = Double.parseDouble(jtTecnecio.getModel().getValueAt(0, i).toString()) * Math.exp(configuracion.getN() / configuracion.getT2() * j);
//                }
//                jtTecnecio.getModel().setValueAt(fijarNumero(r, 5), j, i);
//            }
//        }

    }

    private void segundaElucion() {
//        recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getModel().getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);
//        int s = jtMolibdeno.getSelectedRow() - (recepcion.getHora().getHours() - 7) - 1;
////        System.out.println("s->"+s);
//        if (this.jtTecnecio.getRowCount() > 0) {
//            int[] filasselect = jtMolibdeno.getSelectedRows();
//            Double v = (Double) jtMolibdeno.getModel().getValueAt(jtMolibdeno.getSelectedRow(), jtMolibdeno.getSelectedColumn());
//            Double vc = 0.0;
//            vc = v;
//            v = (Double.valueOf(jtConstantes.getModel().getValueAt(s, 2).toString()));
//            vc = vc * v;
//            Double v2 = 0.0;
//            Double v3 = vc;
//            jtTecnecio.getModel().setValueAt(vc, jtMolibdeno.getSelectedRow(), jtMolibdeno.getSelectedColumn());
//
//            ///cambiar aki mobildeno
//            s = jtTecnecio.getRowCount() - jtMolibdeno.getSelectedRow() + 11;
//            v = (Double.valueOf(jtConstantes.getModel().getValueAt(s, 2).toString()));
//            vc = (Double) jtMolibdeno.getModel().getValueAt(0, jtMolibdeno.getSelectedColumn() + 1);
//            vc = vc * v;
//            jtTecnecio.getModel().setValueAt(vc, 0, jtMolibdeno.getSelectedColumn() + 1);
//            for (int i = 1; i < jtTecnecio.getRowCount(); i++) {
//                v2 = vc * Math.exp(configuracion.getN() / configuracion.getT2() * i);
//                jtTecnecio.getModel().setValueAt(v2, i, jtMolibdeno.getSelectedColumn() + 1);
//
//            }
//            for (int i : filasselect) {
//
//                TableCellFormatterText cellrender = new TableCellFormatterText();
//                cellrender.setV(v3);
//                this.jtTecnecio.getColumnModel().getColumn(jtMolibdeno.getSelectedColumn()).setCellRenderer(cellrender);
//                TableCellFormatterTextCompleto cellrendercomple = new TableCellFormatterTextCompleto();
//                this.jtTecnecio.getColumnModel().getColumn(jtMolibdeno.getSelectedColumn() + 1).setCellRenderer(cellrendercomple);
//                disableReordenableColumnas(jtTecnecio);
//            }
//
//        } else {
//            JOptionPane.showMessageDialog(new JFrame(), "No Existe Expedientes.");
//        }
    }

    private void disableReordenableColumnas(javax.swing.JTable tabla) {
        tabla.getTableHeader().setReorderingAllowed(false);
        tabla.setRowSorter(null);
        tabla.setAutoCreateRowSorter(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXHeader jXHeader1;
    private org.jdesktop.swingx.JXMonthView jxmvCalendario;
    private org.jdesktop.swingx.JXTable jxtlistaRecepcion;
    // End of variables declaration//GEN-END:variables
}
