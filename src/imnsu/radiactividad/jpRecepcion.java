/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imnsu.radiactividad;

import Dao.configuracionDao;
import Dao.decaimientoMDao;
import Dao.decaimientoTDao;
import Dao.recepciongeneradorDao;
import Vo.configuracionVo;
import Vo.decaimientoMVo;
import Vo.decaimientoTVo;
import Vo.recepciongeneradorVo;
import Vo.tipoReactivoVo;
import java.awt.Component;
import java.sql.Time;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.text.NumberFormatter;
import resources.img.ArrayListComboBoxModel;
import resources.img.JInternalFrameView;
import resources.img.TableCellFormatterText;
import resources.img.TableCellFormatterTextCompleto;
import resources.img.formato;
import resources.img.hora;

public class jpRecepcion extends javax.swing.JPanel {

    private final hora h1;
    private final formato ff = new formato();
    private JInternalFrameView iframe;
    private configuracionVo configuracion;

    /**
     * Creates new form jpRecepcion
     */
    public jpRecepcion(JInternalFrameView iframe) {
        h1 = new hora();
        initComponents();
        this.iframe = iframe;
        Date hoy = new Date();
        String dia = String.valueOf(hoy.getDate());
        if (dia.length() == 1) {
            dia = "0" + dia;
        }
        String mes = String.valueOf(hoy.getMonth() + 1);
        if (mes.length() == 1) {
            mes = "0" + mes;
        }
        String ano = String.valueOf(hoy.getYear() + 1900);
        //jftfFecha.setText(dia+"/"+mes+"/"+ano);
        this.configuracion = configuracionDao.getListaConconfiguracion();
        jxdpFecha.setDate(new Date());
        jxdpFpedido.setDate(new Date());

        setCbTipoReactivo();
        setTablaListaRecepcion();
    }

    private void setTablaListaRecepcion() {
        eliminartodaslasfilastabla(jxtlistaRecepcion);
        Vector v;
        for (recepciongeneradorVo recepcion : recepciongeneradorDao.getListaRecepcion()) {
            v = new Vector();
            v.add(recepcion.getReactivo());
            v.add(recepcion.getFecha());
            v.add(recepcion.getHora());
            v.add(recepcion.getActividad());
            v.add(recepcion);
            agregar_fila_tabla(v, jxtlistaRecepcion);
        }
        if (jxtlistaRecepcion.getRowCount() > 0) {
            jxtlistaRecepcion.setRowSelectionInterval(0, 0);
            calcularActividad();
        }
    }

    private void setCbTipoReactivo() {
        jcbTipoReactivo.removeAll();
        ArrayListComboBoxModel model = new ArrayListComboBoxModel(tipoReactivoDao1.comboTipoReactivo());
        jcbTipoReactivo.setModel(model);
        DefaultListCellRenderer renderer = new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof tipoReactivoVo) {
                    tipoReactivoVo tipoestadoVo = (tipoReactivoVo) value;
                    setText(tipoestadoVo.getDescripcion());
                }
                return this;
            }
        };
        jcbTipoReactivo.setRenderer(renderer);
        jcbTipoReactivo.updateUI();
        jcbTipoReactivo.setSelectedIndex(0);
    }

    private void eliminarfilastabla(javax.swing.JTable tabla, int i) {
        ((DefaultTableModel) tabla.getModel()).removeRow(i);
    }

    private void eliminartodaslasfilastabla(javax.swing.JTable tabla) {
        while (tabla.getRowCount() > 0) {
            ((DefaultTableModel) tabla.getModel()).removeRow(tabla.getRowCount() - 1);
        }
    }

    public void agregar_fila_tabla(Vector fila, javax.swing.JTable tabla) {
        ((DefaultTableModel) tabla.getModel()).addRow(fila);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipoReactivoDao1 = new Dao.tipoReactivoDao();
        jXHeader1 = new org.jdesktop.swingx.JXHeader();
        jPanel7 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jpFecha = new javax.swing.JPanel();
        jpFecha.add(h1.createAndShowGUI());
        jxdpFecha = new org.jdesktop.swingx.JXDatePicker();
        jPanel15 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jcbTipoReactivo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jftfActividad = new JFormattedTextField(ff.getFormatoDecimal());
        NumberFormatter nf1 = (NumberFormatter)jftfActividad.getFormatter();
        nf1.setOverwriteMode(false);
        nf1.setAllowsInvalid(false);
        jPanel9 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jxdpFpedido = new org.jdesktop.swingx.JXDatePicker();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jxtlistaRecepcion = new org.jdesktop.swingx.JXTable();
        jPanel10 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtHoraM = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtMolibdeno = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtHoraT = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtTecnecio = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtConstantes = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jXHeader1.setTitle("Recepcion de Material");
        add(jXHeader1, java.awt.BorderLayout.NORTH);

        jPanel7.setPreferredSize(new java.awt.Dimension(320, 183));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel13.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Hora (hh:mm:ss) y Fecha (dd/MM/aa)"));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jpFecha.setLayout(new java.awt.GridLayout(1, 2));
        jPanel3.add(jpFecha, java.awt.BorderLayout.WEST);
        jPanel3.add(jxdpFecha, java.awt.BorderLayout.CENTER);

        jPanel13.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel13, java.awt.BorderLayout.NORTH);

        jPanel15.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.GridLayout(2, 1));

        jPanel4.setLayout(new java.awt.BorderLayout());

        jcbTipoReactivo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel4.add(jcbTipoReactivo, java.awt.BorderLayout.CENTER);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Tipo Reactivo: ");
        jPanel4.add(jLabel1, java.awt.BorderLayout.WEST);

        jPanel6.add(jPanel4);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Actividad: ");
        jPanel5.add(jLabel2, java.awt.BorderLayout.WEST);

        jftfActividad.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jftfActividad.setText("250");
        jftfActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftfActividadActionPerformed(evt);
            }
        });
        jPanel5.add(jftfActividad, java.awt.BorderLayout.CENTER);

        jPanel6.add(jPanel5);

        jPanel15.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel9.setLayout(new java.awt.BorderLayout());

        jButton3.setText("Agregar Material");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton3, java.awt.BorderLayout.CENTER);

        jButton4.setText("2° Elución");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton4, java.awt.BorderLayout.PAGE_END);

        jPanel15.add(jPanel9, java.awt.BorderLayout.EAST);

        jPanel1.add(jPanel15, java.awt.BorderLayout.CENTER);

        jPanel16.setLayout(new java.awt.GridLayout(1, 2));

        jPanel17.setLayout(new java.awt.BorderLayout());

        jLabel3.setText("F.Pedido:");
        jPanel17.add(jLabel3, java.awt.BorderLayout.WEST);
        jPanel17.add(jxdpFpedido, java.awt.BorderLayout.CENTER);

        jPanel16.add(jPanel17);

        jPanel1.add(jPanel16, java.awt.BorderLayout.SOUTH);

        jPanel7.add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel8.setLayout(new java.awt.BorderLayout());

        jxtlistaRecepcion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo Reactivo", "Fecha", "Hora", "Actividad", "Obj"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jxtlistaRecepcion.getTableHeader().setReorderingAllowed(false);
        jxtlistaRecepcion.setVisibleRowCount(5);
        jxtlistaRecepcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jxtlistaRecepcionMouseReleased(evt);
            }
        });
        jxtlistaRecepcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jxtlistaRecepcionKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jxtlistaRecepcion);
        if (jxtlistaRecepcion.getColumnModel().getColumnCount() > 0) {
            jxtlistaRecepcion.getColumnModel().getColumn(1).setMinWidth(80);
            jxtlistaRecepcion.getColumnModel().getColumn(1).setPreferredWidth(80);
            jxtlistaRecepcion.getColumnModel().getColumn(1).setMaxWidth(80);
            jxtlistaRecepcion.getColumnModel().getColumn(2).setMinWidth(60);
            jxtlistaRecepcion.getColumnModel().getColumn(2).setPreferredWidth(60);
            jxtlistaRecepcion.getColumnModel().getColumn(2).setMaxWidth(60);
            jxtlistaRecepcion.getColumnModel().getColumn(3).setMinWidth(60);
            jxtlistaRecepcion.getColumnModel().getColumn(3).setPreferredWidth(60);
            jxtlistaRecepcion.getColumnModel().getColumn(3).setMaxWidth(60);
            jxtlistaRecepcion.getColumnModel().getColumn(4).setMinWidth(0);
            jxtlistaRecepcion.getColumnModel().getColumn(4).setPreferredWidth(0);
            jxtlistaRecepcion.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        jPanel8.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel7.add(jPanel8, java.awt.BorderLayout.CENTER);

        add(jPanel7, java.awt.BorderLayout.WEST);

        jPanel10.setPreferredSize(new java.awt.Dimension(650, 430));
        jPanel10.setLayout(new java.awt.BorderLayout());

        jPanel12.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setPreferredSize(new java.awt.Dimension(70, 0));

        jtHoraM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtHoraM.getTableHeader().setReorderingAllowed(false);
        jtHoraM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jtHoraMMouseReleased(evt);
            }
        });
        jtHoraM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtHoraMKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jtHoraM);

        jPanel12.add(jScrollPane3, java.awt.BorderLayout.WEST);

        jtMolibdeno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtMolibdeno.getTableHeader().setReorderingAllowed(false);
        jtMolibdeno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jtMolibdenoMouseReleased(evt);
            }
        });
        jtMolibdeno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtMolibdenoKeyReleased(evt);
            }
        });
        jScrollPane5.setViewportView(jtMolibdeno);
        if (jtMolibdeno.getColumnModel().getColumnCount() > 0) {
            jtMolibdeno.getColumnModel().getColumn(5).setPreferredWidth(0);
            jtMolibdeno.getColumnModel().getColumn(6).setPreferredWidth(0);
            jtMolibdeno.getColumnModel().getColumn(12).setPreferredWidth(0);
            jtMolibdeno.getColumnModel().getColumn(13).setPreferredWidth(0);
        }

        jPanel12.add(jScrollPane5, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Molibdeno", jPanel12);

        jPanel11.setLayout(new java.awt.BorderLayout());

        jScrollPane4.setPreferredSize(new java.awt.Dimension(70, 0));

        jtHoraT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtHoraT.getTableHeader().setReorderingAllowed(false);
        jtHoraT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jtHoraTMouseReleased(evt);
            }
        });
        jtHoraT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtHoraTKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(jtHoraT);

        jPanel11.add(jScrollPane4, java.awt.BorderLayout.WEST);

        jtTecnecio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTecnecio.getTableHeader().setReorderingAllowed(false);
        jtTecnecio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jtTecnecioMouseReleased(evt);
            }
        });
        jtTecnecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtTecnecioKeyReleased(evt);
            }
        });
        jScrollPane6.setViewportView(jtTecnecio);
        if (jtTecnecio.getColumnModel().getColumnCount() > 0) {
            jtTecnecio.getColumnModel().getColumn(5).setPreferredWidth(0);
            jtTecnecio.getColumnModel().getColumn(6).setPreferredWidth(0);
            jtTecnecio.getColumnModel().getColumn(12).setPreferredWidth(0);
            jtTecnecio.getColumnModel().getColumn(13).setPreferredWidth(0);
        }

        jPanel11.add(jScrollPane6, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Tecnecio", jPanel11);

        jPanel14.setLayout(new java.awt.BorderLayout());

        jtConstantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9.51", "0.0951"},
                {"2", "18.08", "0.1808"},
                {"3", "25.79", "0.2579"},
                {"4", "32.74", "0.3274"},
                {"5", "39", "0.39"},
                {"6", "44.63", "0.4463"},
                {"7", "49.71", "0.4971"},
                {"8", "54.28", "0.5428"},
                {"9", "58.4", "0.584"},
                {"10", "62.11", "0.6211"},
                {"11", "65.8", "0.658"},
                {"12", "68.46", "0.6846"},
                {"13", "71.5", "0.715"},
                {"14", "73.61", "0.7361"},
                {"15", "75.7", "0.757"},
                {"16", "77.79", "0.7779"},
                {"17", "79.48", "0.7948"},
                {"18", "81.17", "0.8117"},
                {"19", "82.545", "0.82545"},
                {"20", "83.92", "0.8392"},
                {"21", "85.035", "0.85035"},
                {"22", "86.15", "0.8615"},
                {"23", "87.1", "0.871"},
                {"24", "87.96", "0.8796"},
                {"36", "93.19", "0.9319"},
                {"48", "95.08", "0.9508"},
                {"60", "95.55", "0.9555"},
                {"72", "95.6", "0.956"}
            },
            new String [] {
                "Horas desde la Primera Elución", "%", "F"
            }
        ));
        jtConstantes.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jtConstantes);

        jPanel14.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Tabla Constantes", jPanel14);

        jPanel10.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        add(jPanel10, java.awt.BorderLayout.CENTER);

        jButton1.setText("Deshacer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton2.setText("Cerrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        add(jPanel2, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.iframe.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    private void guardarDecaimientoM(recepciongeneradorVo recepcion) {
        decaimientoMVo decaimiento = null;
        Timestamp fechahora = null;
        Double calculo = null;
        String hora = null;
        int h = 0;
        int m = 0;
        int s = 0;
        String[] parts = null;
        for (int i = 0; i < jtMolibdeno.getRowCount(); i++) {
            decaimiento = new decaimientoMVo();
            hora = jtHoraM.getModel().getValueAt(i, 0).toString();
            parts = hora.split(":");
            h = Integer.valueOf(parts[0]);
            m = Integer.valueOf(parts[1]);
            s = Integer.valueOf(parts[2]);

            Calendar f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 0);
            java.util.Date ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 0).toString());
            decaimiento.setFechahora1(fechahora);
            decaimiento.setDia1(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 1);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 1).toString());
            decaimiento.setFechahora2(fechahora);
            decaimiento.setDia2(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 2);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 2).toString());
            decaimiento.setFechahora3(fechahora);
            decaimiento.setDia3(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 3);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 3).toString());
            decaimiento.setFechahora4(fechahora);
            decaimiento.setDia4(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 4);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 4).toString());
            decaimiento.setFechahora5(fechahora);
            decaimiento.setDia5(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 5);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 5).toString());
            decaimiento.setFechahora6(fechahora);
            decaimiento.setDia6(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 6);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 6).toString());
            decaimiento.setFechahora7(fechahora);
            decaimiento.setDia7(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 7);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 7).toString());
            decaimiento.setFechahora8(fechahora);
            decaimiento.setDia8(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 8);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 8).toString());
            decaimiento.setFechahora9(fechahora);
            decaimiento.setDia9(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 9);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 9).toString());
            decaimiento.setFechahora10(fechahora);
            decaimiento.setDia10(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 10);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 10).toString());
            decaimiento.setFechahora11(fechahora);
            decaimiento.setDia11(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 11);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 11).toString());
            decaimiento.setFechahora12(fechahora);
            decaimiento.setDia12(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 12);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 12).toString());
            decaimiento.setFechahora13(fechahora);
            decaimiento.setDia13(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 13);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtMolibdeno.getModel().getValueAt(i, 13).toString());
            decaimiento.setFechahora14(fechahora);
            decaimiento.setDia14(calculo);
            decaimiento.setIdrecepciongenerador(recepcion.getId());

            decaimientoMDao.insertDecaimiento(decaimiento);
        }

    }

    private void guardarDecaimientoT(recepciongeneradorVo recepcion) {
        decaimientoTVo decaimiento = null;
        Timestamp fechahora = null;
        Double calculo = null;
        String hora = null;
        int h = 0;
        int m = 0;
        int s = 0;
        String[] parts = null;
        for (int i = 0; i < jtTecnecio.getRowCount(); i++) {
            decaimiento = new decaimientoTVo();
            hora = jtHoraT.getModel().getValueAt(i, 0).toString();
            parts = hora.split(":");
            h = Integer.valueOf(parts[0]);
            m = Integer.valueOf(parts[1]);
            s = Integer.valueOf(parts[2]);

            Calendar f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 0);
            java.util.Date ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 0).toString());
            decaimiento.setFechahora1(fechahora);
            decaimiento.setDia1(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 1);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 1).toString());
            decaimiento.setFechahora2(fechahora);
            decaimiento.setDia2(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 2);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 2).toString());
            decaimiento.setFechahora3(fechahora);
            decaimiento.setDia3(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 3);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 3).toString());
            decaimiento.setFechahora4(fechahora);
            decaimiento.setDia4(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 4);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 4).toString());
            decaimiento.setFechahora5(fechahora);
            decaimiento.setDia5(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 5);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 5).toString());
            decaimiento.setFechahora6(fechahora);
            decaimiento.setDia6(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 6);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 6).toString());
            decaimiento.setFechahora7(fechahora);
            decaimiento.setDia7(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 7);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 7).toString());
            decaimiento.setFechahora8(fechahora);
            decaimiento.setDia8(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 8);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 8).toString());
            decaimiento.setFechahora9(fechahora);
            decaimiento.setDia9(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 9);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 9).toString());
            decaimiento.setFechahora10(fechahora);
            decaimiento.setDia10(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 10);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 10).toString());
            decaimiento.setFechahora11(fechahora);
            decaimiento.setDia11(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 11);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 11).toString());
            decaimiento.setFechahora12(fechahora);
            decaimiento.setDia12(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 12);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 12).toString());
            decaimiento.setFechahora13(fechahora);
            decaimiento.setDia13(calculo);

            f1 = DateToCalendar(recepcion.getFecha());
            f1.add(Calendar.DATE, 13);
            ff = new java.util.Date(f1.getTimeInMillis());
            fechahora = new Timestamp(ff.getYear(), ff.getMonth(), ff.getDate(), h, m, s, 0);

            calculo = Double.parseDouble(jtTecnecio.getModel().getValueAt(i, 13).toString());
            decaimiento.setFechahora14(fechahora);
            decaimiento.setDia14(calculo);
            decaimiento.setIdrecepciongenerador(recepcion.getId());

            decaimientoTDao.insertDecaimiento(decaimiento);
        }

    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        recepciongeneradorVo recepcion = new recepciongeneradorVo();
        java.util.Date h = (java.util.Date) h1.getHora();
        Timestamp fechahora = new Timestamp(jxdpFecha.getDate().getYear(), jxdpFecha.getDate().getMonth(), jxdpFecha.getDate().getDate(), h.getHours(), h.getMinutes(), h.getSeconds(), 0);
        recepcion.setFechahora(fechahora);
        recepcion.setActividad(Double.parseDouble(jftfActividad.getText()));
        recepcion.setIdtiporeactivo(((tipoReactivoVo) jcbTipoReactivo.getSelectedItem()).getId());
        recepcion.setFechasolicitud(jxdpFpedido.getDate());
        recepcion.setFechaentrega(jxdpFpedido.getDate());
        int op = JOptionPane.showConfirmDialog(new JFrame(), "Esta seguro de registrar una recepción de Material", "Advertencia!!!", JOptionPane.YES_NO_OPTION);
        if (op == 0) {
            recepciongeneradorDao.insertRecepcion(recepcion);
            setTablaListaRecepcion();
            recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);
            guardarDecaimientoM(recepcion);
            guardarDecaimientoT(recepcion);
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    private String getDia(int op, String s) {
        String dia = "";
        switch (op) {
            case 0:
                dia = "Dom." + s;
                break;
            case 1:
                dia = "Lun." + s;
                break;
            case 2:
                dia = "Mar." + s;
                break;
            case 3:
                dia = "Mie." + s;
                break;
            case 4:
                dia = "Jue." + s;
                break;
            case 5:
                dia = "Vie." + s;
                break;
            case 6:
                dia = "Sab." + s;
                break;

        }
        return dia;
    }

    public static Calendar DateToCalendar(Date date) {
        Calendar cal = null;
        try {
            DateFormat formatter = new SimpleDateFormat("yyyyMMdd");
            date = (Date) formatter.parse(date.toString().replace("-", ""));
            cal = Calendar.getInstance();
            cal.setTime(date);
        } catch (ParseException e) {
            System.out.println("Exception :" + e);
        }
        return cal;
    }

    private void setTablaModelo(javax.swing.JTable tabla) {
        recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);
        Calendar f1 = DateToCalendar(recepcion.getFecha());
        f1.add(Calendar.DATE, 0);
        Calendar f2 = DateToCalendar(recepcion.getFecha());
        f2.add(Calendar.DATE, 1);
        Calendar f3 = DateToCalendar(recepcion.getFecha());
        f3.add(Calendar.DATE, 2);
        Calendar f4 = DateToCalendar(recepcion.getFecha());
        f4.add(Calendar.DATE, 3);
        Calendar f5 = DateToCalendar(recepcion.getFecha());
        f5.add(Calendar.DATE, 4);
        Calendar f6 = DateToCalendar(recepcion.getFecha());
        f6.add(Calendar.DATE, 5);
        Calendar f7 = DateToCalendar(recepcion.getFecha());
        f7.add(Calendar.DATE, 6);
        Calendar f8 = DateToCalendar(recepcion.getFecha());
        f8.add(Calendar.DATE, 7);
        Calendar f9 = DateToCalendar(recepcion.getFecha());
        f9.add(Calendar.DATE, 8);
        Calendar f10 = DateToCalendar(recepcion.getFecha());
        f10.add(Calendar.DATE, 9);
        Calendar f11 = DateToCalendar(recepcion.getFecha());
        f11.add(Calendar.DATE, 10);
        Calendar f12 = DateToCalendar(recepcion.getFecha());
        f12.add(Calendar.DATE, 11);
        Calendar f13 = DateToCalendar(recepcion.getFecha());
        f13.add(Calendar.DATE, 12);
        Calendar f14 = DateToCalendar(recepcion.getFecha());
        f14.add(Calendar.DATE, 13);
        String d1 = getDia((f1.getTime()).getDay(), "" + String.valueOf(f1.getTime().getDate()) + "-" + String.valueOf(f1.getTime().getMonth() + 1));
        String d2 = getDia((f2.getTime()).getDay(), "" + String.valueOf(f2.getTime().getDate()) + "-" + String.valueOf(f2.getTime().getMonth() + 1));
        String d3 = getDia((f3.getTime()).getDay(), "" + String.valueOf(f3.getTime().getDate()) + "-" + String.valueOf(f3.getTime().getMonth() + 1));
        String d4 = getDia((f4.getTime()).getDay(), "" + String.valueOf(f4.getTime().getDate()) + "-" + String.valueOf(f4.getTime().getMonth() + 1));
        String d5 = getDia((f5.getTime()).getDay(), "" + String.valueOf(f5.getTime().getDate()) + "-" + String.valueOf(f5.getTime().getMonth() + 1));
        String d6 = getDia((f6.getTime()).getDay(), "" + String.valueOf(f6.getTime().getDate()) + "-" + String.valueOf(f6.getTime().getMonth() + 1));
        String d7 = getDia((f7.getTime()).getDay(), "" + String.valueOf(f7.getTime().getDate()) + "-" + String.valueOf(f7.getTime().getMonth() + 1));
        String d8 = getDia((f8.getTime()).getDay(), "" + String.valueOf(f8.getTime().getDate()) + "-" + String.valueOf(f8.getTime().getMonth() + 1));
        String d9 = getDia((f9.getTime()).getDay(), "" + String.valueOf(f9.getTime().getDate()) + "-" + String.valueOf(f9.getTime().getMonth() + 1));
        String d10 = getDia((f10.getTime()).getDay(), "" + String.valueOf(f10.getTime().getDate()) + "-" + String.valueOf(f10.getTime().getMonth() + 1));
        String d11 = getDia((f11.getTime()).getDay(), "" + String.valueOf(f11.getTime().getDate()) + "-" + String.valueOf(f11.getTime().getMonth() + 1));
        String d12 = getDia((f12.getTime()).getDay(), "" + String.valueOf(f12.getTime().getDate()) + "-" + String.valueOf(f12.getTime().getMonth() + 1));
        String d13 = getDia((f13.getTime()).getDay(), "" + String.valueOf(f13.getTime().getDate()) + "-" + String.valueOf(f13.getTime().getMonth() + 1));
        String d14 = getDia((f14.getTime()).getDay(), "" + String.valueOf(f14.getTime().getDate()) + "-" + String.valueOf(f14.getTime().getMonth() + 1));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
                },
                new String[]{
                    d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

    }

    private void setTablaHora(javax.swing.JTable tabla) {
        //recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);

        tabla.getModel().setValueAt(new Time(7, 0, 0), 0, 0);
        tabla.getModel().setValueAt(new Time(8, 0, 0), 1, 0);
        tabla.getModel().setValueAt(new Time(9, 0, 0), 2, 0);
        tabla.getModel().setValueAt(new Time(10, 0, 0), 3, 0);
        tabla.getModel().setValueAt(new Time(11, 0, 0), 4, 0);
        tabla.getModel().setValueAt(new Time(12, 0, 0), 5, 0);
        tabla.getModel().setValueAt(new Time(13, 0, 0), 6, 0);
        tabla.getModel().setValueAt(new Time(14, 0, 0), 7, 0);
        tabla.getModel().setValueAt(new Time(15, 0, 0), 8, 0);
        tabla.getModel().setValueAt(new Time(16, 0, 0), 9, 0);
        tabla.getModel().setValueAt(new Time(17, 0, 0), 10, 0);
        tabla.getModel().setValueAt(new Time(18, 0, 0), 11, 0);

    }

    private void calcularActividad() {
        setTablaHora(jtHoraM);
        setTablaHora(jtHoraT);
        setTablaModelo(jtMolibdeno);
        setTablaModelo(jtTecnecio);
        calcularActividadMolibdeno();
        calcularActividadTecnecio();
        recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getModel().getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);
//        System.out.println("id->"+recepcion.getId());
//        System.out.println("sw->"+recepcion.getSegundaelucion1());
        if (recepcion.getSegundaelucion1()) {
            jtMolibdeno.setRowSelectionInterval(recepcion.getFila1(), recepcion.getFila1());
            jtMolibdeno.setColumnSelectionInterval(recepcion.getColumna1(), recepcion.getColumna1());
            segundaElucion(1);
        }
        if (recepcion.getSegundaelucion2()) {
            jtMolibdeno.setRowSelectionInterval(recepcion.getFila2(), recepcion.getFila2());
            jtMolibdeno.setColumnSelectionInterval(recepcion.getColumna2(), recepcion.getColumna2());
            segundaElucion(2);
        }
        if (recepcion.getSegundaelucion3()) {
            jtMolibdeno.setRowSelectionInterval(recepcion.getFila3(), recepcion.getFila3());
            jtMolibdeno.setColumnSelectionInterval(recepcion.getColumna3(), recepcion.getColumna3());
            segundaElucion(3);
        }
        if (recepcion.getSegundaelucion4()) {
            jtMolibdeno.setRowSelectionInterval(recepcion.getFila4(), recepcion.getFila4());
            jtMolibdeno.setColumnSelectionInterval(recepcion.getColumna4(), recepcion.getColumna4());
            segundaElucion(4);
        }
        if (recepcion.getSegundaelucion5()) {
            jtMolibdeno.setRowSelectionInterval(recepcion.getFila5(), recepcion.getFila5());
            jtMolibdeno.setColumnSelectionInterval(recepcion.getColumna5(), recepcion.getColumna5());
            segundaElucion(5);
        }
        if (recepcion.getSegundaelucion6()) {
            jtMolibdeno.setRowSelectionInterval(recepcion.getFila6(), recepcion.getFila6());
            jtMolibdeno.setColumnSelectionInterval(recepcion.getColumna6(), recepcion.getColumna6());
            segundaElucion(6);
        }

    }

    public static double fijarNumero(double numero, int digitos) {
        double resultado;
        //aqui seteamos para todos
        digitos = 3;
        resultado = numero * Math.pow(10, digitos);
        resultado = Math.round(resultado);
        resultado = resultado / Math.pow(10, digitos);
        return resultado;
    }

    private void calcularActividadMolibdeno() {
        recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getModel().getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);
        int s = recepcion.getHora().getHours() - 7;
        Double r;// = recepcion.getActividad() * Math.exp(configuracion.getN() / configuracion.getMt2() * (24 - configuracion.getQ()));
        int Nn = -1;
        int Nx = 24;
        int Sx = 0;
        boolean sw = true;
        //if(s==1)sw=false;
        for (int j = 0; j < jtMolibdeno.getRowCount(); j++) {
            //  sw = true;
            Sx = 0;
            Nn = Nn + 1;
            for (int i = 0; i < jtMolibdeno.getColumnCount(); i++) {
                if (i == 0) {
                    if (j == s) {
                        r = recepcion.getActividad();
                        sw = false;
                    } else {
                        if (sw) {
                            r = 0.0;
                        } else {
                            r = recepcion.getActividad() * Math.exp(configuracion.getN() / configuracion.getMt2() * (Nn - s));
                        }
                    }
                } else {
                    Sx = Nx * i + Nn;
                    r = recepcion.getActividad() * Math.exp(configuracion.getN() / configuracion.getMt2() * (Sx - s));
                }
                jtMolibdeno.getModel().setValueAt(fijarNumero(r, 5), j, i);
               // calcularActividadMolibdenolunes();
                if (j == 0) {

                    jtTecnecio.getModel().setValueAt(fijarNumero(r*0.8796, 5) , 0, i);
                    if(jtMolibdeno.getModel().getColumnName(i).substring(0,3).trim().equals("Lun")) {
                  jtTecnecio.getModel().setValueAt(fijarNumero(r, 5) , 0, i);
//                    
                    }
      }
            }

        }

    }
    

    

    private void calcularActividadTecnecio() {
        Double c = 0.0;
        recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getModel().getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);
        int s = recepcion.getHora().getHours() - 7;
        Double r = recepcion.getActividad() * Math.exp(configuracion.getN() / configuracion.getMt2() * (24 - configuracion.getQ()));
        boolean sw = true;

        if (s == 1) {
            c = Double.valueOf(jtConstantes.getModel().getValueAt(22, 2).toString());
            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
        }
        if (s == 2) {
            c = Double.valueOf(jtConstantes.getModel().getValueAt(21, 2).toString());
            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
        }
        if (s == 3) {
            c = Double.valueOf(jtConstantes.getModel().getValueAt(20, 2).toString());
            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
        }
        if (s == 4) {
            c = Double.valueOf(jtConstantes.getModel().getValueAt(19, 2).toString());
            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
        }
        if (s == 5) {
            c = Double.valueOf(jtConstantes.getModel().getValueAt(18, 2).toString());
            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
        }
        if (s == 6) {
            c = Double.valueOf(jtConstantes.getModel().getValueAt(17, 2).toString());
            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
        }
        if (s == 7) {
            c = Double.valueOf(jtConstantes.getModel().getValueAt(16, 2).toString());
            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
        }
        if (s == 8) {
            c = Double.valueOf(jtConstantes.getModel().getValueAt(15, 2).toString());
            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
        }
        if (s == 9) {
            c = Double.valueOf(jtConstantes.getModel().getValueAt(14, 2).toString());
            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
        }
        if (s == 10) {
            c = Double.valueOf(jtConstantes.getModel().getValueAt(13, 2).toString());
            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
        }
        if (s == 11) {
            c = Double.valueOf(jtConstantes.getModel().getValueAt(12, 2).toString());
            Double r2 = c * Double.valueOf(jtTecnecio.getModel().getValueAt(0, 1).toString());
            jtTecnecio.getModel().setValueAt(fijarNumero(r2, 5), 0, 1);
        }
        if (s == 0) {
            sw = false;
        }
        for (int j = 1; j < jtTecnecio.getRowCount(); j++) {

            for (int i = 0; i < jtTecnecio.getColumnCount(); i++) {
                if (i == 0) {
                    if (j == s) {
                        r = recepcion.getActividad();
                        sw = false;
                    } else {
                        if (sw) {
                            r = 0.0;
                        } else {
                            r = recepcion.getActividad() * Math.exp(configuracion.getN() / configuracion.getT2() * (j - s));
                        }
                    }
                } else {

                    r = Double.parseDouble(jtTecnecio.getModel().getValueAt(0, i).toString()) * Math.exp(configuracion.getN() / configuracion.getT2() * j);
                }
                jtTecnecio.getModel().setValueAt(fijarNumero(r, 5), j, i);
            }
        }

    }

    private void recalculoActividadtecnecio(int fila, int columna) {
        recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getModel().getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);
        Double r = recepcion.getActividad() * Math.exp(configuracion.getN() / configuracion.getMt2() * (24 - configuracion.getQ()));
        int cont = 0;
        for (int j = fila + 1; j < jtTecnecio.getRowCount(); j++) {
            cont++;
            r = Double.parseDouble(jtTecnecio.getModel().getValueAt(fila, columna).toString()) * Math.exp(configuracion.getN() / configuracion.getT2() * cont);
            jtTecnecio.getModel().setValueAt(fijarNumero(r, 5), j, columna);
        }
    }

    private void segundaElucion(int numero) {
        //      System.out.println("tablar->"+jxtlistaRecepcion.getSelectedRow());
        recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getModel().getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);
        //    System.out.println("--"+recepcion.getFila1());
        //  System.out.println("Numero->"+numero);
        int columna = -1;
        int fila = -1;
        switch (numero) {
            case 1: {
                columna = recepcion.getColumna1();
                fila = recepcion.getFila1();
//                System.out.println("1->"+recepcion.getId());
//                System.out.println("1f->"+recepcion.getFila1());
                break;
            }
            case 2: {
                columna = recepcion.getColumna2();
                fila = recepcion.getFila2();
//                System.out.println("2->"+recepcion.getId());
//                System.out.println("2f->"+recepcion.getFila2());
                break;
            }
            case 3: {
                columna = recepcion.getColumna3();
                fila = recepcion.getFila3();
//                System.out.println("3->"+recepcion.getId());
//                System.out.println("3f->"+recepcion.getFila3());
                break;
            }
            case 4: {
                columna = recepcion.getColumna4();
                fila = recepcion.getFila4();
//                System.out.println("4->"+recepcion.getId());
//                System.out.println("4f->"+recepcion.getFila4());
                break;
            }
            case 5: {
                columna = recepcion.getColumna5();
                fila = recepcion.getFila5();
//                System.out.println("5->"+recepcion.getId());
//                System.out.println("5f->"+recepcion.getFila5());
                break;
            }
            case 6: {
                columna = recepcion.getColumna6();
                fila = recepcion.getFila6();
//                System.out.println("6->"+recepcion.getId());
//                System.out.println("6f->"+recepcion.getFila6());
                break;
            }
            default:
                break;
        }
        int s = 0;
        if (jtTecnecio.getModel().getValueAt(0, columna).toString().trim().compareTo("0.0") == 0) {
            s = fila - (recepcion.getHora().getHours() - 7) - 1;
//            System.out.println("sii");
        } else {
            //          System.out.println("noooo");
            s = fila - 1;
        }
        //  System.out.println("s-->"+s);
        if (this.jtTecnecio.getRowCount() > 0) {
            int[] filasselect = jtMolibdeno.getSelectedRows();
            Double v = (Double) jtMolibdeno.getModel().getValueAt(fila, columna);
//            System.out.println("mobil->" + v);
            Double vc = 0.0;
            vc = v;
            v = (Double.valueOf(jtConstantes.getModel().getValueAt(s, 2).toString()));
//            System.out.println("constantes->" + v);
            vc = vc * v;
            Double v2 = 0.0;
            Double v3 = vc;
            jtTecnecio.getModel().setValueAt(vc, jtMolibdeno.getSelectedRow(), columna);

            ///cambiar aki mobildeno
            s = jtTecnecio.getRowCount() - jtMolibdeno.getSelectedRow() + 11;
//            System.out.println("s->" + s);
            v = (Double.valueOf(jtConstantes.getModel().getValueAt(s, 2).toString()));
//            System.out.println("XXX--->"+jtMolibdeno.getSelectedColumn());
            vc = (Double) jtMolibdeno.getModel().getValueAt(0, jtMolibdeno.getSelectedColumn() + 1);
            vc = vc * v;
            jtTecnecio.getModel().setValueAt(vc, 0, jtMolibdeno.getSelectedColumn() + 1);
            for (int i = 1; i < jtTecnecio.getRowCount(); i++) {
                v2 = vc * Math.exp(configuracion.getN() / configuracion.getT2() * i);
                jtTecnecio.getModel().setValueAt(v2, i, jtMolibdeno.getSelectedColumn() + 1);

            }
            for (int i : filasselect) {

                TableCellFormatterText cellrender = new TableCellFormatterText();
                cellrender.setV(v3);
                this.jtTecnecio.getColumnModel().getColumn(jtMolibdeno.getSelectedColumn()).setCellRenderer(cellrender);
                TableCellFormatterTextCompleto cellrendercomple = new TableCellFormatterTextCompleto();
                this.jtTecnecio.getColumnModel().getColumn(jtMolibdeno.getSelectedColumn() + 1).setCellRenderer(cellrendercomple);
                disableReordenableColumnas(jtTecnecio);
            }
            recalculoActividadtecnecio(fila, columna);
        } else {
            JOptionPane.showMessageDialog(new JFrame(), "No Existe Expedientes.");
        }

    }

    private void disableReordenableColumnas(javax.swing.JTable tabla) {
        tabla.getTableHeader().setReorderingAllowed(false);
        tabla.setRowSorter(null);
        tabla.setAutoCreateRowSorter(false);
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
//        recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getModel().getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);
        //      guardarDecaimientoM(recepcion);
        //    guardarDecaimientoT(recepcion);

        int fila = jtMolibdeno.getRowCount();
        int columna = jtMolibdeno.getColumnCount();
        jtHoraM.setRowSelectionInterval(jtMolibdeno.getSelectedRow(), jtMolibdeno.getSelectedRow());
        if ((fila >= 0 && fila <= 12) && (columna >= 0 && columna <= 14)) {
            JTableHeader th = jtMolibdeno.getTableHeader();
            TableColumnModel tcm = th.getColumnModel();
            String hora = jtHoraM.getModel().getValueAt(jtHoraM.getSelectedRow(), 0).toString();
            TableColumn tcmn = tcm.getColumn(jtMolibdeno.getSelectedColumn());//(jtMolibdeno.getSelectedColumn());        
            String dia = tcmn.getHeaderValue().toString();
            int op = JOptionPane.showConfirmDialog(new JFrame(), "Esta seguro de reliazar una segunda eleución? \n para dia:" + dia + " hora:" + hora, "Advertencia!!!", JOptionPane.YES_NO_OPTION);
            if (op == 0) {
                int numero = setSegundaElucion();
                int x = jtMolibdeno.getSelectedRow();
                int y = jtMolibdeno.getSelectedColumn();
                int z = jxtlistaRecepcion.getSelectedRow();
                setTablaListaRecepcion();
                jxtlistaRecepcion.setRowSelectionInterval(z, z);
                jtMolibdeno.setRowSelectionInterval(x, x);
                jtMolibdeno.setColumnSelectionInterval(y, y);

                segundaElucion(numero);
            }
            calcularActividad();
        } else {
            JOptionPane.showMessageDialog(new JFrame(), "Seleciones una fila y columna de Molibdeno valido!!!", "Alerta!!!", 0);
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    private int setSegundaElucion() {
        recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getModel().getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);

        int numero = recepciongeneradorDao.getNumeroelucion(recepcion);
        //System.out.println("numero->"+numero);
        recepciongeneradorDao.setSegundaElucion(recepcion, String.valueOf(numero), jtMolibdeno.getSelectedRow(), jtMolibdeno.getSelectedColumn());
        return numero;
    }
    private void jxtlistaRecepcionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jxtlistaRecepcionMouseReleased
        // TODO add your handling code here:
        calcularActividad();
    }//GEN-LAST:event_jxtlistaRecepcionMouseReleased

    private void jxtlistaRecepcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jxtlistaRecepcionKeyReleased
        calcularActividad();
    }//GEN-LAST:event_jxtlistaRecepcionKeyReleased

    private void jtHoraTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtHoraTKeyReleased
        // TODO add your handling code here:
        jtTecnecio.setRowSelectionInterval(jtHoraT.getSelectedRow(), jtHoraT.getSelectedRow());
        jtHoraM.setRowSelectionInterval(jtHoraT.getSelectedRow(), jtHoraT.getSelectedRow());
        jtMolibdeno.setRowSelectionInterval(jtHoraT.getSelectedRow(), jtHoraT.getSelectedRow());

    }//GEN-LAST:event_jtHoraTKeyReleased

    private void jtHoraTMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtHoraTMouseReleased
        // TODO add your handling code here:
        jtTecnecio.setRowSelectionInterval(jtHoraT.getSelectedRow(), jtHoraT.getSelectedRow());
        jtHoraM.setRowSelectionInterval(jtHoraT.getSelectedRow(), jtHoraT.getSelectedRow());
        jtMolibdeno.setRowSelectionInterval(jtHoraT.getSelectedRow(), jtHoraT.getSelectedRow());
    }//GEN-LAST:event_jtHoraTMouseReleased

    private void jtTecnecioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtTecnecioKeyReleased
        // TODO add your handling code here:
        jtHoraT.setRowSelectionInterval(jtTecnecio.getSelectedRow(), jtTecnecio.getSelectedRow());
        jtHoraM.setRowSelectionInterval(jtTecnecio.getSelectedRow(), jtTecnecio.getSelectedRow());
        jtMolibdeno.setRowSelectionInterval(jtTecnecio.getSelectedRow(), jtTecnecio.getSelectedRow());
        jtMolibdeno.setColumnSelectionInterval(jtTecnecio.getSelectedColumn(), jtTecnecio.getSelectedColumn());
    }//GEN-LAST:event_jtTecnecioKeyReleased

    private void jtTecnecioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTecnecioMouseReleased
        // TODO add your handling code here:
        jtHoraT.setRowSelectionInterval(jtTecnecio.getSelectedRow(), jtTecnecio.getSelectedRow());
        jtHoraM.setRowSelectionInterval(jtTecnecio.getSelectedRow(), jtTecnecio.getSelectedRow());
        jtMolibdeno.setRowSelectionInterval(jtTecnecio.getSelectedRow(), jtTecnecio.getSelectedRow());
        jtMolibdeno.setColumnSelectionInterval(jtTecnecio.getSelectedColumn(), jtTecnecio.getSelectedColumn());
    }//GEN-LAST:event_jtTecnecioMouseReleased

    private void jtHoraMKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtHoraMKeyReleased
        // TODO add your handling code here:
        jtMolibdeno.setRowSelectionInterval(jtHoraM.getSelectedRow(), jtHoraM.getSelectedRow());
        jtHoraT.setRowSelectionInterval(jtHoraM.getSelectedRow(), jtHoraM.getSelectedRow());
        jtTecnecio.setRowSelectionInterval(jtHoraM.getSelectedRow(), jtHoraM.getSelectedRow());

    }//GEN-LAST:event_jtHoraMKeyReleased

    private void jtHoraMMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtHoraMMouseReleased
        // TODO add your handling code here:
        jtMolibdeno.setRowSelectionInterval(jtHoraM.getSelectedRow(), jtHoraM.getSelectedRow());
        jtHoraT.setRowSelectionInterval(jtHoraM.getSelectedRow(), jtHoraM.getSelectedRow());
        jtTecnecio.setRowSelectionInterval(jtHoraM.getSelectedRow(), jtHoraM.getSelectedRow());

    }//GEN-LAST:event_jtHoraMMouseReleased

    private void jtMolibdenoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtMolibdenoKeyReleased
        // TODO add your handling code here:
        jtHoraM.setRowSelectionInterval(jtMolibdeno.getSelectedRow(), jtMolibdeno.getSelectedRow());
        jtHoraT.setRowSelectionInterval(jtMolibdeno.getSelectedRow(), jtMolibdeno.getSelectedRow());
        jtTecnecio.setRowSelectionInterval(jtMolibdeno.getSelectedRow(), jtMolibdeno.getSelectedRow());
        jtTecnecio.setColumnSelectionInterval(jtMolibdeno.getSelectedColumn(), jtMolibdeno.getSelectedColumn());
    }//GEN-LAST:event_jtMolibdenoKeyReleased

    private void jtMolibdenoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtMolibdenoMouseReleased
        // TODO add your handling code here:
        jtHoraM.setRowSelectionInterval(jtMolibdeno.getSelectedRow(), jtMolibdeno.getSelectedRow());
        jtHoraT.setRowSelectionInterval(jtMolibdeno.getSelectedRow(), jtMolibdeno.getSelectedRow());
        jtTecnecio.setRowSelectionInterval(jtMolibdeno.getSelectedRow(), jtMolibdeno.getSelectedRow());
        jtTecnecio.setColumnSelectionInterval(jtMolibdeno.getSelectedColumn(), jtMolibdeno.getSelectedColumn());

    }//GEN-LAST:event_jtMolibdenoMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            int op = JOptionPane.showConfirmDialog(new JFrame(), "Eliminar 2° elución", "Advertencia!!!", JOptionPane.YES_NO_OPTION);
            if (op == 0) {
                recepciongeneradorVo recepcion = (recepciongeneradorVo) jxtlistaRecepcion.getModel().getValueAt(jxtlistaRecepcion.getSelectedRow(), 4);
                int numero = recepciongeneradorDao.getNumeroelucion(recepcion);
                recepciongeneradorDao.setSegundaElucionPasoAtras(recepcion, String.valueOf(numero - 1), 0, 0);
                int x = jtMolibdeno.getSelectedRow();
                int y = jtMolibdeno.getSelectedColumn();
                int z = jxtlistaRecepcion.getSelectedRow();
                setTablaListaRecepcion();
                jxtlistaRecepcion.setRowSelectionInterval(z, z);
                jtMolibdeno.setRowSelectionInterval(x, x);
                jtMolibdeno.setColumnSelectionInterval(y, y);
        
            }
 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jftfActividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftfActividadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftfActividadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.jdesktop.swingx.JXHeader jXHeader1;
    private javax.swing.JComboBox jcbTipoReactivo;
    private javax.swing.JFormattedTextField jftfActividad;
    private javax.swing.JPanel jpFecha;
    private javax.swing.JTable jtConstantes;
    private javax.swing.JTable jtHoraM;
    private javax.swing.JTable jtHoraT;
    private javax.swing.JTable jtMolibdeno;
    private javax.swing.JTable jtTecnecio;
    private org.jdesktop.swingx.JXDatePicker jxdpFecha;
    private org.jdesktop.swingx.JXDatePicker jxdpFpedido;
    private org.jdesktop.swingx.JXTable jxtlistaRecepcion;
    private Dao.tipoReactivoDao tipoReactivoDao1;
    // End of variables declaration//GEN-END:variables
}
